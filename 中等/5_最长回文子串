#给你一个字符串 s，找到 s 中最长的回文子串。
char * longestPalindrome(char * s){
    int len=strlen(s);
    int maxx=0;int flag=0;
    for(int i=0;i<len;i++)
    {
        for(int j=i;j<len;j++)
        {
            if(s[i]==s[j])
            {
                int m=i,n=j;
                while(m<n)
                {
                    if(s[m]!=s[n])
                        break;
                    m++;n--;
                }
                if((m>=n)&&(j-i+1>maxx))
                {
                    maxx=j-i+1;
                    flag=i;
                }//内层循环用来逐个比较字符串是否满足回文要求，再用Maxx记录最大长度 
            }
        }
    }
    int k=0;
    char *ss=(char*)malloc(maxx+1);
    for(int i=flag;i<maxx+flag;i++)
        ss[k++]=s[i];
    ss[k]='\0';
    return ss;
}
//小感悟：最近写的字符串类的问题很多可以采用双层循环类似两个指针的方式解题
