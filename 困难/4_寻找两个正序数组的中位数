#给定两个大小分别为m和n的正序（从小到大）数组nums1和nums2，返回这两个正序数组的中位数。
算法的时间复杂度应该为 O(log (m+n)) 
double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {
    int num=nums1Size+nums2Size;
    int mid=num/2;
    int i=0,j=0;
    int merge[num];
    int sum=0;
    while(i<nums1Size&&j<nums2Size&&sum<=mid)
    {
        if(nums1[i]<=nums2[j])
        {
            merge[sum]=nums1[i];
            i++;
        }
        else
        {
            merge[sum]=nums2[j];
            j++;
        }
        sum++;
    }
    while(i<nums1Size&&sum<=mid)
    {
        merge[sum++]=nums1[i++];
    }
    while(j<nums2Size&&sum<=mid)
    {
        merge[sum++]=nums2[j++];
    }
    if(num%2==0)
        return (merge[mid-1]+merge[mid])/2.0;
    else
        return merge[mid];
}
#先合并两个数组再输出中间值。
