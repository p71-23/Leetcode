#给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。
如果数组中不存在目标值 target，返回 [-1, -1]。
/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* searchRange(int* nums, int numsSize, int target, int* returnSize){
    *returnSize=2;#设置返回数组大小为2
    int left=0;int right=numsSize-1;
    int i=0,j=0,mid=0;
    int *sign=(int*)malloc(sizeof(int)*(*returnSize));#为结果数组分配内存空间
    sign[0]=-1;sign[1]=-1;
    if(numsSize==0)
        return sign;
    while(left<=right)
    {
        mid=(left+right)/2;
        if(target>nums[mid])
            left=mid+1;
        else if(target<nums[mid])
            right=mid-1;
        else
        {
            j=mid;break;
        }
    }
    if(j!=mid)
        return sign;#目标值未找到，则返回结果数组
    for(i=j;i<numsSize;i++)
    {
        if(nums[i]==target)
            sign[1]=i;
    }#查找目标值的起始和结束位置
    for(i=j;i>=0;i--)
    {
        if(nums[i]==target)
            sign[0]=i;
    }
    return sign;
}
