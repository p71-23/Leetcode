#在一个 n * m 的二维数组中，每一行都按照从左到右 非递减 的顺序排序，每一列都按照从上到下 非递减 的顺序排序。请完成一个高效的函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。
/*
 * 输入 **matrix 是长度为 matrixSize 的数组指针的数组，其中每个元素（也是一个数组）
 * 的长度组成 *matrixColSize 数组作为另一输入，*matrixColSize 数组的长度也为 matrixSize
 */
bool findNumberIn2DArray(int** matrix, int matrixSize, int* matrixColSize, int target){
    if(matrix==NULL||matrixSize==0||matrixColSize==NULL||matrixColSize[0]==0)
    return false;
    int left=0;
    int right=matrixColSize[0]-1;//定位到第一行最大的数
    while(left<matrixSize&&right>=0)
    {
        if(target==matrix[left][right])
            return true;
        else if (target<matrix[left][right])
            right--;
        else
            left++;
    }
    return false;

}
